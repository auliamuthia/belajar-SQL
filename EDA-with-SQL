1. Select a few rows

SELECT * 
FROM table_name 
LIMIT5;

2. Coalesce function

coalesce(value_1, value_2 [, ...])

# Operates row by row
# Returns firs non null value

SELECT *FROM prices;
SELECTcoalesce(column_1, column_2)FROM prices;

3. Casting with CAST()

SELECT CAST (column_name AS integer)
FROM table_name;

4. Casting with ::

#FORMAT
-- With :: notation
SELECT value::new_type;

#EXAMPLES
-- Cast 3.7 as an integer
SELECT3.7::integer;
-- Cast a column called total as an integer
SELECT total::integerFROM prices;

More summary function

# Correlation Function
SELECT corr(a, b) 
FROM table_name;

Output:
corr        
------------------- 
0.637710143588615
(1 row)

# Median

Percentile functions

SELECT percentile_disc(percentile) WITHIN GROUP (ORDERBY column_name)
FROM table;
-- percentile between 0 and 1
-> Returns a value from column

SELECT percentile_cont(percentile) WITHIN GROUP (ORDER BY column_name)
FROM table;
-> Interpolates between values

Percentile examples
SELECT val
FROM nums; 

val 
-----   
1   
3   
4   
5
(4 rows)

SELECT percentile_disc(.5) WITHIN GROUP (ORDERBY val), 
       percentile_cont(.5) WITHINGROUP (ORDERBY val)
FROM nums;

Output:
percentile_disc | percentile_cont 
-----------------+-----------------               
3                 |             3.5

#Create Temporary Table

Syntax

Create Temp Table Syntax

--Create table as 
CREATE TEMP TABLE new_tablename AS
-- Query results to store in the table
SELECT column1, column2 
FROM table;

SelectIntoSyntax

-- Select existing columns
SELECT column1, column2 
-- Clause to direct results to a new temp table
INTO TEMP TABLE new_tablename 
-- Existing table with exisitng columns
FROMtable;

